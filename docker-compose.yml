version: '3.2'
services:
  app: &app
    build:
      context: .
      dockerfile: ./Dockerfile
      args:
        RUBY_VERSION: '3.0.0'
        PG_MAJOR: '12'
        NODE_MAJOR: '14'
        YARN_VERSION: '1.22.5'
        BUNDLER_VERSION: '2.2.3'
    image: jelly:1.0.1
    tmpfs:
      - /tmp
    volumes:
      - app-sync:/app:nocopy
      - rails_cache:/app/tmp/cache
      # - bundle:/usr/local/bundle
      - node_modules:/app/node_modules
      - packs:/app/public/packs
    environment:
      - GROBID_HOST=grobid
      - FIGURE_HOST=figures
      - NODE_ENV=development
      - RAILS_ENV=development
      - REDIS_URL=redis://redis:6379/
      - DATABASE_URL=postgres://postgres:postgres@postgres:5432
      - DB_HOST=postgres
      - DB_USER=postgres
      - DB_PASSWORD=foobar123
      - POSTGRES_USER=postgres # needed on init to create role matching DB_USER
      - POSTGRES_PASSWORD=foobar123 # needed on init to create role matching DB_USER
      - BOOTSNAP_CACHE_DIR=/usr/local/bundle/_bootsnap
      - WEBPACKER_DEV_SERVER_HOST=webpacker
      - WEB_CONCURRENCY=1
      - HISTFILE=/app/log/.bash_history
      - PSQL_HISTFILE=/app/log/.psql_history
      - EDITOR=vi
    links:
      - postgres
      - redis
      - grobid
      - figures

  rails:
    <<: *app
    # command: .docker/web-startup.sh
    command: .docker/startup.sh
    ports:
      - '3000:3000'

  sidekiq:
    <<: *app
    command: bundle exec sidekiq -C config/sidekiq.yml

  webpacker:
    <<: *app
    command: ./bin/webpack-dev-server
    ports:
      - '3035:3035'
    volumes:
      - app-sync:/app:nocopy
      # - bundle:/usr/local/bundle
      - node_modules:/app/node_modules
      - packs:/app/public/packs
    environment:
      - NODE_ENV=${NODE_ENV:-development}
      - RAILS_ENV=${RAILS_ENV:-development}
      - WEBPACKER_DEV_SERVER_HOST=0.0.0.0

  postgres:
    image: postgres:12
    restart: always
    environment:
      - POSTGRES_USER
    ports:
      - '5432:5432'
    expose:
      - '5432'

  redis:
    image: redis:5.0.7
    restart: always
    ports:
      - '6379:6379'
    expose:
      - '6379'

  grobid:
    image: lfoppiano/grobid:0.5.6
    restart: on-failure
    ports:
      - '8070:8070'
      - '8071:8071'
    expose:
      - '8070'

  figures:
    image: dluan/figures:0.0.5
    ports:
      - '4567:4567'
    expose:
      - '4567'

volumes:
  postgres:
  redis:
  bundle:
  node_modules:
  rails_cache:
  packs:
  app-sync:
    external: true
