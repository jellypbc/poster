ruby:
  meta_description = content_for?(:meta_description) ? yield(:meta_description) : "Do The Science"
  meta_twitter_creator = content_for?(:meta_twitter_creator) ? yield(:meta_twitter_creator) : "@jellypbc"
  meta_title = content_for?(:title) ? yield(:title) : "Untitled"
  meta_twitter_description = content_for?(:meta_twitter_description) ? yield(:meta_twitter_description) : "Anonymous"

  if content_for?(:meta_project_image_url)
    meta_image_url = yield(:meta_project_image_url)
    meta_image_width = content_for?(:meta_project_image_width) ? yield(:meta_project_image_width) : nil
    meta_image_height = content_for?(:meta_project_image_height) ? yield(:meta_project_image_height) : nil
  else
    meta_image_url = image_url('social_twitter.png')
    meta_image_width = "600"
    meta_image_height = "300"
  end

  favicon = Rails.env.development? ? 'jelly_blue.png' : 'favicon.png'

head
  title = full_title yield(:title)
  meta name="Jelly | #{yield(:title)}" content=meta_tag_sanitize_and_truncate(meta_description)
  meta name="Description" content=""
  meta name="Keywords" content=""
  meta name='viewport' content='width=device-width, initial-scale=1'
  meta charset="utf-8"

  meta itemprop="name" content=yield(:title)
  meta itemprop="description" content=meta_tag_sanitize_and_truncate(meta_description)

  meta property='og:site_name' content='Jelly'
  meta property='og:url' content=request.original_url
  meta property="og:title" content=meta_tag_sanitize_and_truncate(yield(:title))
  meta property="og:description" content=meta_tag_sanitize_and_truncate(meta_description)
  meta property="og:image" content=meta_image_url
  meta property="og:image:secure_url" content=meta_image_url

  meta name="twitter:domain" content="jellypbc.com"
  meta name='twitter:site' content='@jellypbc'
  meta name='twitter:widgets:csp' content='on'
  meta name="twitter:title" content=meta_tag_sanitize_and_truncate(meta_title)
  meta name="twitter:description" content=meta_tag_sanitize_and_truncate(meta_twitter_description)
  meta name="twitter:image" content=meta_image_url
  meta name="twitter:card" content="summary"

  = csrf_meta_tags
  = csp_meta_tag

  = stylesheet_link_tag 'application', media: 'all', 'data-turbolinks-track': 'reload'
  = javascript_pack_tag 'application', 'data-turbolinks-track': 'reload'

  = stylesheet_link_tag 'https://fonts.googleapis.com/css?family=Noto+Serif:400,400i,700'

  = favicon_link_tag asset_path(favicon)

  javascript: 
    var org='5e808dac';
    var w=window;var d=document;var cb=window.CommandBar=window.CommandBar||[];cb.methods=["config","boot","shutdown","setContext","addContext","addCallback","addCallbacks","addRouter","report","log","error","setTestMode","loadEditor","isOpen", "addSearch", "addCommand", "removeCommand", "showGuide", "execute"];cb.q=[];cb.f=function(t){return function(){var a=Array.prototype.slice.call(arguments);a.unshift(t);cb.q.push(a)}};for(var t=0;t<cb.methods.length;t++){var e=cb.methods[t];cb[e]=cb.f(e)}var load=function(){var a="h";var t="s";var r=localStorage.getItem("commandbar.lc");var e="https://api.commandbar.com";var o="o";var c="l";var n="t";var l="c";if(r&&r.includes("local")){var v="a";var s=":8";var i="p:/";e="htt"+i+"/"+c+o+l+v+c+a+o+t+n+s+"000"}var m=d.createElement("script");var h=e+"/latest/5e808dac";h=r?h+"?lc="+r:h;m.type="text/javascript";m.async=true;m.src=h;d.head.appendChild(m)};if(w.attachEvent){w.attachEvent("onload",load)}else{w.addEventListener("load",load,false)}

